package com.zhiliao.controller.param;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.zhiliao.dao.param.TbTermMapper;
import com.zhiliao.model.common.Pagination;
import com.zhiliao.model.param.TbTerm;
import com.zhiliao.service.param.TbTermService;

/**
 * 学期的控制层
 * @author 毕伟谦
 *
 */
@Controller
@RequestMapping(value="/term")
public class TbTermController {

	@Autowired
	private TbTermService termService;
	
	/**
	 * 跳转到学期管理页面
	 * @return
	 */
	@RequestMapping(value="/termView.action")
	public String termView(){
		return "product/term-list";
	}
	
	/**
	 * 跳转到学期的增加页面
	 * @return
	 */
	@RequestMapping(value="/termAddView.action")
	public String termAddView(){
		return "product/term-add";
	}
	
	@RequestMapping(value="/termUpdateView.action")
	public String termUpdateView(HttpServletRequest request,
			  @RequestParam(value="termId",required=true) Integer termId){
		TbTerm term = this.termService.selectById(termId);
		request.setAttribute("data", term);
		return "product/term-update";
	}
	
	/**
	 * 分页获取学期
	 * @return
	 */
	@RequestMapping(value="/getTermByPage.action")
	@ResponseBody
	public Map<String, Object> getTermByPage(@RequestParam(value = "page",defaultValue = "1") Integer page,
            								 @RequestParam(value = "rows",defaultValue = "10") Integer rows,
            								 @RequestParam(value = "termYear",required = false) String termYear
            								 ){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		try {
			List<Map<String, Object>> resultList = null;
			int totalRecords = 0;
			Map<String,Object> map = new HashMap<String,Object>();
			
			map.put("termYear", termYear);
			
			//调用service方法,进行数据的查询
			Pagination<Map<String, Object>> pagination;
			//MultipleDataSource.setDataSourceKey("ViceDataSource");//设置为副数据源
			pagination = this.termService.getPagingDatas(map, page, rows, "selectCount","selectList",TbTermMapper.class);
			resultList = pagination.getPageList();//返回数据
			totalRecords = pagination.getTotalRecords();//返回行数	
			if(totalRecords>0){
				resultMap.put("rows", resultList);
				resultMap.put("total", totalRecords);
				resultMap.put("status", true);
				resultMap.put("msg", "获取成功");
			}else {
				resultMap.put("status", false);
				resultMap.put("msg", "没有获取到数据");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return resultMap;
	}
	
	
	/**
	 * 增加学期信息
	 * @param request
	 * @param param
	 * @return
	 */
	@RequestMapping(value="/addTerm.action")
	@ResponseBody
	public Map<String, Object> addTerm(HttpServletRequest request,TbTerm term){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		term.setIsDelete("0");
		term.setAddTime(new Date());
		int rows = this.termService.insert(term);
		if (rows > 0) {
			resultMap.put("status", true);
			resultMap.put("msg", "增加成功");
		}else {
			resultMap.put("status", false);
			resultMap.put("msg", "增加失败");
		}
		return resultMap;
	}
	
	/**
	 * 修改学期信息
	 * @param request
	 * @param param
	 * @return
	 */
	@RequestMapping(value="/updateTerm.action")
	@ResponseBody
	public Map<String, Object> updateParam(HttpServletRequest request,TbTerm term){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		int rows = this.termService.updateById(term);
		if (rows > 0) {
			resultMap.put("status", true);
			resultMap.put("msg", "修改成功");
		}else {
			resultMap.put("status", false);
			resultMap.put("msg", "修改失败");
		}
		return resultMap;
	}
	
	/**
	 * 批量删除或单条删除学期
	 * @param request
	 * @param ids
	 * @return Map<String, Object>
	 */
	@RequestMapping(value="/deleteTermList.action")
	@ResponseBody 
	public Map<String, Object> deleteTermList(HttpServletRequest request,@RequestParam("ids") Integer[] ids){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		//将数组添加到list中
        List<Integer> list = new ArrayList<Integer>();
        for (Integer id : ids) {
            list.add(id);
        }
		if(list.size()>0){
			int rows = this.termService.deleteTermList(list);
			if(rows>0){
				resultMap.put("msg", "删除成功!!");
				resultMap.put("status", true);
			}else {
				resultMap.put("msg", "删除失败!!");
				resultMap.put("status", false);
			}
		}else{
			resultMap.put("msg", "参数不能为空!!");
			resultMap.put("status", false);
		}
		return resultMap;
	}
	
	/**
	 * 获取根据类型获取学期信息
	 * @return
	 */
	@RequestMapping(value="/getTermList.action")
	@ResponseBody
	public Map<String, Object> getTermList(){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		Map<String, Object> map = new HashMap<String, Object>();
		
		List<TbTerm> list = this.termService.selectList(map);
		if (list.size()>0) {
			resultMap.put("data", list);
			resultMap.put("status", true);
			resultMap.put("msg", "获取成功");
		}else {
			resultMap.put("status", false);
			resultMap.put("msg", "没有获取到数据");
		}
		return resultMap;
	}
	
	
}
