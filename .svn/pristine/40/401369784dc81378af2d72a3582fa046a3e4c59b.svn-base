package com.zhiliao.controller.sys;

import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.zhiliao.aop.SysLog;
import com.zhiliao.dao.sys.MoneySetMapper;
import com.zhiliao.model.common.Pagination;
import com.zhiliao.model.sys.MoneySet;
import com.zhiliao.service.sys.MoneySetService;
import com.zhiliao.util.dbdriver.MultipleDataSource;

/**
 * 金额设置控制层
 * @ClassName: MoneySetController 
 * @author 毕伟谦 
 * @date 2018年1月4日 下午3:25:09 
 */
@RequestMapping("set")
@Controller
public class MoneySetController {

	@Autowired
	private MoneySetService service;
	
	/**
	 * 跳转到setView页面
	 * @Title: setView 
	 * @return String
	 */
	@RequestMapping("/setView.action")
	public String setView(){
		return "sys/set-list";
	}
	
	/**
	 * 跳转到增加页面
	 * @Title: addView 
	 * @return String
	 */
	@RequestMapping("/addView.action")
	public String addView(){
		return "sys/set-add";
	}
	/**
	 * 跳转到修改页面
	 * @Title: updateView 
	 * @param @param request
	 * @param @param id
	 * @return String
	 */
	@RequestMapping("/updateView.action")
	public String updateView(HttpServletRequest request,
							 @RequestParam(value="id")Integer id){
		MoneySet moneySet = this.service.selectById(id);
		request.setAttribute("data", moneySet);
		return "sys/set-update";
	}
	
	
	/**
	 * 分页获取获取金额设置
	 * @return
	 */
	@RequestMapping(value="/getSetByPage.action")
	@ResponseBody
	public Map<String, Object> getSetByPage(@RequestParam(value = "page",defaultValue = "1") Integer page,
            								@RequestParam(value = "rows",defaultValue = "20") Integer rows,
            								@RequestParam(value="setMold",required=false)String setMold){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		try {
			List<Map<String, Object>> resultList = null;
			int totalRecords = 0;
			Map<String,Object> map = new HashMap<String,Object>();
			map.put("setMold", setMold);
			
			//调用service方法,进行数据的查询
			Pagination<Map<String, Object>> pagination;
			MultipleDataSource.setDataSourceKey("MasterDataSource");//设置为主数据源
			pagination = this.service.getPagingDatas(map, page, rows, "selectCount","selectList",MoneySetMapper.class);
			resultList = pagination.getPageList();//返回数据
			totalRecords = pagination.getTotalRecords();//返回行数	
			if(totalRecords>0){
				resultMap.put("rows", resultList);
				resultMap.put("total", totalRecords);
				resultMap.put("status", true);
				resultMap.put("msg", "获取成功");
			}else {
				resultMap.put("status", false);
				resultMap.put("msg", "没有获取到数据");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return resultMap;
	}
	
	
	/**
	 * 增加金额设置
	 * @Title: addSet 
	 * @param @param set
	 * @return Map<String,Object>
	 */
	@SysLog(operType="增加金额设置",operObject="金额设置",operPath="set/addSet.action")
	@RequestMapping(value="/addSet.action")
	@ResponseBody
	public Map<String, Object> addSet(MoneySet set){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		set.setAddTime(new Date());
		set.setStatus("1");
		int rows = this.service.insert(set);
		if (rows > 0) {
			resultMap.put("status", true);
			resultMap.put("msg", "增加成功");
		}else {
			resultMap.put("status", false);
			resultMap.put("msg", "增加失败");
		}
		return resultMap;
	}
	
	
	/**
	 * 修改金额设置
	 * @Title: addSet 
	 * @param @param set
	 * @return Map<String,Object>
	 */
	@SysLog(operType="修改金额设置",operObject="金额设置",operPath="set/updateSet.action")
	@RequestMapping(value="/updateSet.action")
	@ResponseBody
	public Map<String, Object> updateSet(MoneySet set){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		int rows = this.service.updateById(set);
		if (rows > 0) {
			resultMap.put("status", true);
			resultMap.put("msg", "修改成功");
		}else {
			resultMap.put("status", false);
			resultMap.put("msg", "修改失败");
		}
		return resultMap;
	}
	
	/**
	 * 查询金额设置
	 * @Title: getSetList 
	 * @param @param setMold
	 * @return Map<String,Object>
	 */
	@RequestMapping("/getSetList.action")
	@ResponseBody
	public Map<String, Object> getSetList(@RequestParam(value="setMold")String setMold){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("setType", setMold);
		List<MoneySet> list = this.service.selectList(map);
		if (list.size()>0) {
			resultMap.put("status", true);
			resultMap.put("msg", "查询成功!!");
			resultMap.put("data", list);
		}else {
			resultMap.put("status", false);
			resultMap.put("msg", "查询失败!!");
		}
		return resultMap;
	}
	
	
}
