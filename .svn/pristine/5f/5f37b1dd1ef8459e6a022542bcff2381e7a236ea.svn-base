package com.zhiliao.controller.sys;

import java.io.IOException;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.zhiliao.dao.sys.TbCommentMapper;
import com.zhiliao.model.common.Pagination;
import com.zhiliao.model.sys.TbComment;
import com.zhiliao.service.sys.CommentService;
import com.zhiliao.util.FileUpload;
import com.zhiliao.util.StringUtil;

@RequestMapping("comment")
@Controller
public class CommentController {
	
	@Autowired
	private CommentService service;
	
	/**
	 * 跳转到commentView页面
	 * @Title: commentView 
	 * @return String
	 */
	@RequestMapping("/commentView.action")
	public String commentView(){
		return "sys/comment-list";
	}
	/**
	 * 跳转到增加页面
	 * @Title: addView 
	 * @return String
	 */
	@RequestMapping("/addView.action")
	public String addView(){
		return "sys/comment-add";
	}

	/**
	 * 分页获取反馈意见的信息
	 * @Title: getCommentByPage 
	 * @param @param page
	 * @param @param rows
	 * @param @param typeName
	 * @return Map<String,Object>
	 */
	@RequestMapping(value="/getCommentByPage.action")
	@ResponseBody
	public Map<String, Object> getCommentByPage(@RequestParam(value = "page",defaultValue = "1") Integer page,
            								    @RequestParam(value = "rows",defaultValue = "20") Integer rows,
            								    @RequestParam(value = "typeName",required=false) String typeName){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		try {
			List<Map<String, Object>> resultList = null;
			int totalRecords = 0;
			Map<String,Object> map = new HashMap<String,Object>();
			map.put("typeName", typeName);
			//调用service方法,进行数据的查询
			Pagination<Map<String, Object>> pagination;
			pagination = this.service.getPagingDatas(map, page, rows, "selectCount","selectList",TbCommentMapper.class);
			resultList = pagination.getPageList();//返回数据
			totalRecords = pagination.getTotalRecords();//返回行数	
			if(totalRecords>0){
				resultMap.put("rows", resultList);
				resultMap.put("total", totalRecords);
				resultMap.put("status", true);
				resultMap.put("msg", "获取成功");
			}else {
				resultMap.put("status", false);
				resultMap.put("msg", "没有获取到数据");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return resultMap;
	}
	
	
	/**
	 * 增加反馈意见
	 * @Title: addComment 
	 * @param @param imagetop
	 * @param @param imagetwo
	 * @param @param request
	 * @param @param modelMap
	 * @param @param record
	 * @param @throws IOException 
	 * @return Map<String,Object>
	 */
	@RequestMapping(value="/addComment.action")
	@ResponseBody
	public Map<String, Object> addComment(@RequestParam(value="imagetop")MultipartFile imagetop,
										  @RequestParam(value="imagetwo")MultipartFile imagetwo,
    					HttpServletRequest request,TbComment record)throws IOException{
		
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		record.setAddTime(new Date());
		record.setStatus("1");
		String filePath1="";//第一张图片的路径
		String filePath2="";//第二张图片的路径
		String filePath ="";//全部图片的路径
		if(StringUtil.isNotEmpty(imagetop.getOriginalFilename())){
			filePath1 = FileUpload.uploadFile(imagetop, request);
			filePath = filePath1;
		}
		if(StringUtil.isNotEmpty(imagetwo.getOriginalFilename())){
			filePath2 = FileUpload.uploadFile(imagetwo, request);
			if(StringUtil.isEmpty(filePath)){
				filePath = filePath2;
			}else{
				filePath = filePath+";"+filePath2;
			}
		}
        record.setImage1(filePath1);
        record.setImage2(filePath2);
        record.setImages(filePath);
        record.setTypeId(4);
		int rows = this.service.insert(record);
		if (rows > 0) {
			resultMap.put("status", 1);
			resultMap.put("msg", "增加成功");
		}else {
			resultMap.put("status", 0);
			resultMap.put("msg", "增加失败");
		}
		return resultMap;
	}
	
	
	
}
