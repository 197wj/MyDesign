package com.zhiliao.controller.param;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.zhiliao.dao.param.SysParamMapper;
import com.zhiliao.model.common.Pagination;
import com.zhiliao.model.param.SysParam;
import com.zhiliao.service.param.SysParamService;

@Controller
@RequestMapping(value="/param")
public class ParamController {
	
	@Autowired
	private SysParamService paramService;
	
	
	
	
	/**
	 * 分页获取科目
	 * @return
	 */
	@RequestMapping(value="/getParamByPage.action")
	@ResponseBody
	public Map<String, Object> getParamByPage(@RequestParam(value = "page",defaultValue = "1") Integer page,
            								  @RequestParam(value = "rows",defaultValue = "10") Integer rows,
            								  @RequestParam(value = "paramName",defaultValue = "") String paramName,
            								  @RequestParam(value = "paramType",required=true) String paramType){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		try {
			List<Map<String, Object>> resultList = null;
			int totalRecords = 0;
			Map<String,Object> map = new HashMap<String,Object>();
			map.put("paramType", paramType);
			map.put("paramName", paramName);
			//调用service方法,进行数据的查询
			Pagination<Map<String, Object>> pagination;
			//MultipleDataSource.setDataSourceKey("ViceDataSource");//设置为副数据源
			pagination = this.paramService.getPagingDatas(map, page, rows, "selectCount","selectList",SysParamMapper.class);
			resultList = pagination.getPageList();//返回数据
			totalRecords = pagination.getTotalRecords();//返回行数	
			if(totalRecords>0){
				resultMap.put("rows", resultList);
				resultMap.put("total", totalRecords);
				resultMap.put("status", true);
				resultMap.put("msg", "获取成功");
			}else {
				resultMap.put("status", false);
				resultMap.put("msg", "没有获取到数据");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return resultMap;
	}
	
	
	/**
	 * 增加字典信息
	 * @param request
	 * @param param
	 * @return
	 */
	@RequestMapping(value="/addParam.action")
	@ResponseBody
	public Map<String, Object> addParam(HttpServletRequest request,SysParam param){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		param.setIsDelete("0");
		param.setAddTime(new Date());
		int rows = this.paramService.insert(param);
		if (rows > 0) {
			resultMap.put("status", true);
			resultMap.put("msg", "增加成功");
		}else {
			resultMap.put("status", false);
			resultMap.put("msg", "增加失败");
		}
		return resultMap;
	}
	
	/**
	 * 增加字典信息
	 * @param request
	 * @param param
	 * @return
	 */
	@RequestMapping(value="/updateParam.action")
	@ResponseBody
	public Map<String, Object> updateParam(HttpServletRequest request,SysParam param){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		int rows = this.paramService.updateById(param);
		if (rows > 0) {
			resultMap.put("status", true);
			resultMap.put("msg", "修改成功");
		}else {
			resultMap.put("status", false);
			resultMap.put("msg", "修改失败");
		}
		return resultMap;
	}
	
	/**
	 * 批量删除或单条删除字典
	 * @param request
	 * @param ids
	 * @return Map<String, Object>
	 */
	@RequestMapping(value="/deleteParamList.action")
	@ResponseBody 
	public Map<String, Object> deleteParamList(HttpServletRequest request,@RequestParam("ids") Integer[] ids){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		//将数组添加到list中
        List<Integer> list = new ArrayList<Integer>();
        for (Integer id : ids) {
            list.add(id);
        }
		if(list.size()>0){
			int rows = this.paramService.deleteParamList(list);
			if(rows>0){
				resultMap.put("msg", "删除成功!!");
				resultMap.put("status", true);
			}else {
				resultMap.put("msg", "删除失败!!");
				resultMap.put("status", false);
			}
		}else{
			resultMap.put("msg", "参数不能为空!!");
			resultMap.put("status", false);
		}
		return resultMap;
	}
	
	/**
	 * 获取根据类型获取字典信息
	 * @param paramType
	 * @return
	 */
	@RequestMapping(value="/getParamList.action")
	@ResponseBody
	public Map<String, Object> getParamList(@RequestParam(value = "paramType",required=true) String paramType){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("paramType", paramType);
		List<SysParam> list = this.paramService.selectList(map);
		if (list.size()>0) {
			resultMap.put("data", list);
			resultMap.put("status", true);
			resultMap.put("msg", "获取成功");
		}else {
			resultMap.put("status", false);
			resultMap.put("msg", "没有获取到数据");
		}
		return resultMap;
	}
	
}
