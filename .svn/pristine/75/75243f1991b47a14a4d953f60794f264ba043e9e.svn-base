package com.zhiliao.controller.product;

import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.zhiliao.dao.school.UcGradeMapper;
import com.zhiliao.model.common.Pagination;
import com.zhiliao.model.school.UcGrade;
import com.zhiliao.service.school.UcGradeService;
import com.zhiliao.util.dbdriver.MultipleDataSource;

@Controller
@RequestMapping(value="grade")
public class GradeController {
	
	@Autowired
	private UcGradeService ucGradeService;
	/**
	 * 跳转到型号列表页面
	 * @return
	 */
	@RequestMapping(value="/gradeView.action")
	public String gradeView(){
		return "product/grade-list";
	}
	
	/**
	 * 分页获取年级
	 * @return
	 */
	@RequestMapping(value="/getGradeByPage.action")
	@ResponseBody
	public Map<String, Object> getGradeByPage(@RequestParam(value = "page",defaultValue = "1") Integer page,
            								  @RequestParam(value = "rows",defaultValue = "10") Integer rows,
            								  @RequestParam(value = "gradeName",required=false) String gradeName,
            								  @RequestParam(value = "isOpen",required=false) String isOpen){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		try {
			List<Map<String, Object>> resultList = null;
			int totalRecords = 0;
			Map<String,Object> map = new HashMap<String,Object>();
			map.put("gradeName", gradeName);
			map.put("isOpen", isOpen);
			//调用service方法,进行数据的查询
			Pagination<Map<String, Object>> pagination;
			MultipleDataSource.setDataSourceKey("ViceDataSource");//设置为副数据源
			pagination = this.ucGradeService.getPagingDatas(map, page, rows, "selectCount","selectList",UcGradeMapper.class);
			resultList = pagination.getPageList();//返回数据
			totalRecords = pagination.getTotalRecords();//返回行数	
			if(totalRecords>0){
				resultMap.put("rows", resultList);
				resultMap.put("total", totalRecords);
				resultMap.put("status", true);
				resultMap.put("msg", "获取成功");
			}else {
				resultMap.put("status", false);
				resultMap.put("msg", "没有获取到数据");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		MultipleDataSource.setDataSourceKey("MasterDataSource");//设置为主数据源
		return resultMap;
	}
	
	
	/**
	 * 增加字典信息
	 * @param request
	 * @param param
	 * @return
	 */
	@RequestMapping(value="/updateGrade.action")
	@ResponseBody
	public Map<String, Object> updateGrade(HttpServletRequest request,UcGrade ucGrade){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		MultipleDataSource.setDataSourceKey("ViceDataSource");//设置为副数据源
		int rows = this.ucGradeService.updateById(ucGrade);
		if (rows > 0) {
			resultMap.put("status", true);
			resultMap.put("msg", "修改成功");
		}else {
			resultMap.put("status", false);
			resultMap.put("msg", "修改失败");
		}
		MultipleDataSource.setDataSourceKey("MasterDataSource");//设置为主数据源
		return resultMap;
	}
	
	
	/**
	 * 获取根据类型获取字典信息
	 * @param paramType
	 * @return
	 */
	@RequestMapping(value="/getGradeList.action")
	@ResponseBody
	public Map<String, Object> getSubjectList(@RequestParam(value = "isOpen",defaultValue="1") String isOpen){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("isOpen", isOpen);
		MultipleDataSource.setDataSourceKey("ViceDataSource");//设置为副数据源
		List<UcGrade> list = this.ucGradeService.selectList(map);
		if (list.size()>0) {
			resultMap.put("data", list);
			resultMap.put("status", true);
			resultMap.put("msg", "获取成功");
		}else {
			resultMap.put("status", false);
			resultMap.put("msg", "没有获取到数据");
		}
		MultipleDataSource.setDataSourceKey("MasterDataSource");//设置为主数据源
		return resultMap;
	}

}
