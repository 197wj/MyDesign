package com.zhiliao.controller;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.zhiliao.dao.app.SysAppMapper;
import com.zhiliao.model.app.SysApp;
import com.zhiliao.model.common.Pagination;
import com.zhiliao.service.app.AppService;

@Controller
@RequestMapping(value="/app")
public class AppController{

	@Autowired
	private AppService appService;
	
	/**
	 * 显示页面
	 * @Title: appView 
	 * @Description: TODO(这里用一句话描述这个方法的作用) 
	 * @param @return 
	 * @return String
	 */
	@RequestMapping("/appView.action")
	public String appView(){
		return "sysApp/app-list";
	}
	
	/**
	 * 跳转到app版本添加界面
	 */
	@RequestMapping(value="/addAppView.action")
	public String addAppView(){
		return "sysApp/app-add";
	}
	

	/**
	 * 跳转到app版本编辑界面
	 */
	@RequestMapping(value="/editAppView.action")
	public String editAppView(HttpServletRequest request,@RequestParam("updId") Integer updId){
		SysApp sysApp = appService.getById(updId);
		//ModelAndView mav = new ModelAndView();
		request.setAttribute("sysUpdate", sysApp);
		//mav.setViewName("app/app-update");
		return "sysApp/app-update";
	}
	
	
	/**
	 * 获取所有app版本信息
	 * @return
	 */
	@RequestMapping(value="/getAppByPage.action")
	@ResponseBody
	public Map<String, Object> getAppByPage(@RequestParam(value = "page",defaultValue="1") int page
			                               ,@RequestParam(value = "rows",defaultValue="20") int rows
			                               ,@RequestParam(value = "versionName",required=false) String versionName){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		List<Map<String, Object>> resultList = null;
		int totalRecords = 0;
		try {
			Map<String,Object> map = new HashMap<String,Object>();
			map.put("versionName", versionName);
			//调用service方法,进行数据的查询
			Pagination<Map<String,Object>> pagination = appService.getPagingDatas(map, page, rows, "getCount","getList",SysAppMapper.class);
			resultList = pagination.getPageList();//返回数据
			totalRecords = pagination.getTotalRecords();//返回总行数

			resultMap.put("total",totalRecords);
			resultMap.put("rows", resultList);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return resultMap;
	}
	

	
	
	/**
	 * 添加app版本信息
	 */
	@RequestMapping(value="/addApp.action")
	@ResponseBody
	public Map<String, Object> addApp(HttpServletRequest request,SysApp sysApp,@RequestParam("file") MultipartFile file) throws IOException{
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		Map<String,Object> map = new HashMap<String,Object>();
		map.put("versionName", sysApp.getVersionName());
		map.put("type", sysApp.getStatus());
		SysApp versionName = appService.getByMap(map);
		if (null != versionName) {
			resultMap.put("status", false);
			resultMap.put("msg", "版本名称已经存在");
			return resultMap;
		}
		
		map.clear();
		map.put("versionCode", sysApp.getVersionCode());
		map.put("type", sysApp.getStatus());
		SysApp versionCode = appService.getByMap(map);
		if (null != versionCode) {
			resultMap.put("status", false);
			resultMap.put("msg", "版本号已经存在");
			return resultMap;
		}
		String uploadPath = getUploadPath(request);
		int rows = appService.insertApp(sysApp, file, uploadPath);
		if(rows>0){
			resultMap.put("status", true);
			resultMap.put("msg", "添加成功");
		}else {
			resultMap.put("status", false);
			resultMap.put("msg", "添加失败");
		}
		return resultMap;
	}
	
	
	/**
	 * 更新app版本信息
	 */
	@RequestMapping(value="/editApp.action")
	@ResponseBody
	public Map<String, Object> editApp(SysApp sysUpdate){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		Map<String,Object> map = new HashMap<String,Object>();
		map.put("versionCode", sysUpdate.getVersionCode());
		SysApp versionCode = appService.getByMap(map);
		if (null != versionCode) {
			resultMap.put("status", false);
			resultMap.put("msg", "版本号已经存在");
			return resultMap;
		}
		
		int rows = appService.updateById(sysUpdate);
		if(rows>0){
			resultMap.put("status", true);
			resultMap.put("msg", "修改成功");
		}else {
			resultMap.put("status", false);
			resultMap.put("msg", "修改失败");
		}
		return resultMap;
	}
	
	
	/**
	 * 删除app版本信息
	 */
	@RequestMapping(value="/deleteApp.action")
	@ResponseBody
	public Map<String, Object> deleteApp(@RequestParam("ids") Integer[] ids){
		Map<String,Object> resultMap = new LinkedHashMap<String,Object>();
		List<Integer> list = new ArrayList<Integer>();
	    for (Integer id : ids) {//将数组添加到list中
	        list.add(id);
	    }
		int rows = appService.deleteList(list);
		if(rows>0){
			resultMap.put("status", true);
			resultMap.put("msg", "删除成功");
		}else {
			resultMap.put("status", false);
			resultMap.put("msg", "删除失败");
		}
		return resultMap;
	}
	
	/**
	 * 获取文件上传的真实路径
	 */
	public String getUploadPath(HttpServletRequest request){
		return request.getSession().getServletContext().getRealPath("/");
	}
	
}
